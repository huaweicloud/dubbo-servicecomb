<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>com.huaweicloud.dubbo-servicecomb</groupId>
    <artifactId>spring-boot-discovery-tests</artifactId>
    <version>1.1.3-SNAPSHOT</version>
  </parent>

  <properties>
    <spring-boot.version>2.1.6.RELEASE</spring-boot.version>
    <spring.version>5.1.14.RELEASE</spring.version>
    <!-- TODO: CI 环境使用 1.3.2， 但是 spring cloud huawei 有一个 bug ，暂时没修复， 运行测试用例的时候，需要编译最新版本 -->
    <spring-cloud-huawei.version>1.3.2</spring-cloud-huawei.version>
<!--    <spring-cloud-huawei.version>1.3.3-Hoxton-SNAPSHOT</spring-cloud-huawei.version>-->
  </properties>

  <modelVersion>4.0.0</modelVersion>

  <artifactId>spring-boot-discovery-tests-client</artifactId>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.huaweicloud</groupId>
        <artifactId>spring-cloud-huawei-dependencies</artifactId>
        <version>${spring-cloud-huawei.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${spring.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.huaweicloud.dubbo-servicecomb</groupId>
        <artifactId>dubbo-servicecomb-dependencies</artifactId>
        <version>${project.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
        <version>4.0.3</version>
      </dependency>
      <dependency>
        <groupId>jakarta.validation</groupId>
        <artifactId>jakarta.validation-api</artifactId>
        <version>2.0.2</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.validator</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>6.1.5.Final</version>
      </dependency>
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>1.24</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.huaweicloud.dubbo-servicecomb</groupId>
      <artifactId>discovery-common-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>com.huaweicloud</groupId>
      <artifactId>spring-cloud-starter-huawei-servicecomb-discovery</artifactId>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>

                <image>
                  <name>servicecomb/service-center</name>
                  <alias>service-center</alias>
                  <run>
                    <wait>
                      <log>server is ready</log>
                      <tcp>
                        <ports>
                          <port>30100</port>
                        </ports>
                      </tcp>
                      <time>60000</time>
                    </wait>
                    <ports>
                      <port>service.center.port:30100</port>
                    </ports>
                  </run>
                </image>


                <image>
                  <name>price-provider-test:${project.version}</name>
                  <alias>price-provider-test</alias>
                  <run>
                    <env>
                      <JAVA_OPTS>
                        -Dspring.cloud.servicecomb.discovery.address=http://sc.servicecomb.io:30100
                      </JAVA_OPTS>
                      <JAR_PATH>/maven/price-provider-test-${project.version}.jar</JAR_PATH>
                    </env>
                    <links>
                      <link>service-center:sc.servicecomb.io</link>
                    </links>
                    <wait>
                      <log>watching microservice successfully</log>
                      <tcp>
                        <ports>
                          <port>8080</port>
                        </ports>
                      </tcp>
                      <time>120000</time>
                    </wait>
                    <ports>
                      <port>8080:8080</port>
                    </ports>
                    <dependsOn>
                      <container>service-center</container>
                    </dependsOn>
                  </run>
                </image>

                <image>
                  <name>order-consumer-test:${project.version}</name>
                  <alias>order-consumer-test</alias>
                  <run>
                    <env>
                      <JAVA_OPTS>
                        -Dspring.cloud.servicecomb.discovery.address=http://sc.servicecomb.io:30100
                      </JAVA_OPTS>
                      <JAR_PATH>/maven/order-consumer-test-${project.version}.jar</JAR_PATH>
                    </env>
                    <links>
                      <link>service-center:sc.servicecomb.io</link>
                    </links>
                    <wait>
                      <log>watching microservice successfully</log>
                      <tcp>
                        <ports>
                          <port>8088</port>
                        </ports>
                      </tcp>
                      <time>120000</time>
                    </wait>
                    <ports>
                      <port>8088:8088</port>
                    </ports>
                    <dependsOn>
                      <container>service-center</container>
                    </dependsOn>
                  </run>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.odavid.maven.plugins</groupId>
            <artifactId>mixin-maven-plugin</artifactId>
            <configuration>
              <mixins>
                <mixin>
                  <groupId>com.huaweicloud.dubbo-servicecomb</groupId>
                  <artifactId>docker-run-config</artifactId>
                  <version>${project.version}</version>
                </mixin>
              </mixins>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>